package com.it.www.test;

/**
 * 变量和常量
 * @author Administrator
 *
 */
public class Demo1 {
	
	public static void main(String[] args) {
		
		//定义一个变量
		/**
		 * 需求：输出一个“北大青鸟”
		 */
		System.out.println("北大");
		
		//输出一个"北大"
		System.out.println("北大青鸟");
		
		System.out.println("============================================");
		
		//定义的变量，可以不手动进行赋值。
		String  name;
		
		//使用变量来进行表示(定义了一个名字为msg的变量，值为“北大”)
		String  msg = "北大";
		//使用变量
		System.out.println(msg);
		
		//针对这个msg的变量进行重新的赋值
		msg = "北大青鸟";
		System.out.println(msg);
		
		
		//=================================常量========================================
		
		System.out.println("=================================常量========================================");
		
		//定义一个常量(必须要进行手动赋值【手动初始化】)
		final   String   city = "西安";
		
		final   int   age = 30;
		
		System.out.println(city);
		System.out.println(age);
		
		//针对city进行重新赋值
		//city = "上海";  错误的
		
		/**
		 * 注意：常量是不允许再次进行重新赋值的操作。
		 * 一般我们定义常量的时候，使用的都是大写。
		 */
		final   int   MAX_AGE = 50;
		
		//变量和常量是不能重名的。
		/*
		String  address = "北京";
		
		String  address = "南京";*/
		
		
		
		
		
		
	}

}

======================================================================
package com.it.www.test;
/**
 * 讲解java中的数据类型
 * @author Administrator
 */
public class Demo2 {
	
	public static void main(String[] args) {
		
		//整数 系列=====
		byte   a = 1; //8位
		
		short  b = 1; //16位
		
		int    c =1;  //32位
		
		long  d = 1;  // 64位
		
		System.out.println(a+"---"+b+"---"+c+"---"+d);
		
		/**
		 * 四种整数类型的区别 ？
	     * 1、各自的表数范围是不同的。
		 * 2、每种类型所占用的计算机的内存空间是不同的。
		 */
		//byte：-128~~~127        256个值    byte(8位)     2的8次方=256
		//   -2的8-1次方~~~~ 2的8-1次方-1    
		//byte  x = 128;  超出范围
        byte  myValue = 10;
        
        int    x = 20;
        //内部发生的是自动转换
        int  sum = myValue+x;  //变量代表的是一种类型。
        
        //由高级的类型转换为低级的类型，可以使用强制转换。
        byte  sum1 = (byte) (myValue+x);
        
        System.out.println(sum1);
        
        /**
         * 注意：强制转换是有风险的。可能导致数据发生变化。
         */
        
        byte  a1 = (byte) 128;
        System.out.println(a1);
        
        //得出一个结论：在使用强制转换的过程中，我们都是保证数值不变的情况，让其类型进行转换。
        
		
		
		
		
		
	}

}
=========================================================================
package com.it.www.test;
/**
 * 浮点型的使用（float单精度 32位  <   double双精度 64位）
 * @author Administrator
 *
 */
public class Demo3 {
	
	public static void main(String[] args) {
		/**
		 * 单精度 和 双精度区别：
		 * 1、表示的数值范围不同。
		 * 2、所占用的内存空间不同。
		 * 3、小数点后保留的有效位是不同的（double有效位精确高）
		 */
		//特点：所有的小数常量值，系统默认的都是double类型。
		//float  a = 12.55;
		
		//想表示一个标准的float类型，可以在值的后面添加一个f或F，建议大家写 F
		float  a = 12.555544443333F;   //保留的小数点后  6位
		System.out.println(a);
		
		double  b = 12.55554444333322221111; //保留的小数点后的 15位
		System.out.println(b);
		
		//科学计数法
		double  c = 12.5E10;
		System.out.println(c);
		
		//强制转换后，精度会丢失
		float  x = (float) b;
		System.out.println(x);
		
		double  xx = .25;  //0.25
		
		
		
	}

}
===========================================================================
package com.it.www.test;
/**
 * char  和  boolean类型的讲解
 * @author Administrator
 */
public class Demo4 {
	
	public static void main(String[] args) {
		
		  char   a = 'a';
		  
		  char  b = '中';
		  
		  char  c = '1';
		  
		  char  d = '_';
		  
		  char  e =' ';
		  
		   //char  f = '';   错误的
		  
		  char  a1 = '\n';  //特殊字符，还是字符。
		  
		  //char  b1 = 'ab';  错的
		  
		  System.out.println(a);
		  System.out.println(b);
		  System.out.println(c);
		  System.out.println(d);
		  System.out.println(e);
		  
		  System.out.println("----------------------------------");
		  //字符型-----会对应一个 ASCII码值。 97--'a'
		  char  c1 = 97;
		  System.out.println(c1);  //a
		  
		  char  d1 = 65;
		  System.out.println(d1);  //A
		  
		  //ASCII码值的范围：  0~~~65535
		  char  x = 'a';
		  char result = (char) (x+1);
		  System.out.println(result);
		  
		  
		  boolean  bb1 = true;  //成立  ，  真的
		  
		  bb1 = false; //不成立  ， 假的
		  
		  
		
	}

}

======================================================================
package com.it.www.test;
import java.util.*;

/**
 * 讲解Scanner类的使用
 * @author Administrator
 * 
 * 如何学习Java内部提供的新的类
 *   
 *   1、这个类的名字是咋写的？
 *   
 *   2、这个类在哪个包下？
 *   
 *   3、掌握这个类是描述哪一类事物的？（做啥的）
 *   
 *   4、学习这个类中的  属性  和  方法？
 *   
 *   Scanner类的学习：
 *   
 *       1、Scanner类名。
 *       
 *       2、位于java.util包下。
 *       
 *       3、Scanner类是用于完成控制台 和 程序内部 进行交互的。
 *       
 */

public class Demo5 {
	
	public static void main(String[] args) {
		//第一步：创建一个Scanner的对象。（创建了一个扫描器sc）
		Scanner  sc = new Scanner(System.in);  //固定的
		//第二步：在控制台进行信息的提示。
		System.out.println("请输入您的姓名:");
		//第三步：实现控制台数据的扫描。
		String name = sc.next();  //??????
		System.out.println("得到的数据："+name);
		
		//int  intValue = sc.nextInt();
		/*sc.nextByte();
		sc.nextShort();
		sc.nextLong();
		sc.nextFloat();
		sc.nextDouble();
		sc.nextBoolean();*/
		
		//特殊：针对控制台上录入的字符类型，我们的做法是：
		//可以以字符串的方式接收过来。再通过charAt(下标)来进行提取。
		System.out.println("输入您的性别:");
		//“男”  使用了字符串中的一个charAt()方法来提取字符串中的字符。
		//"男"---只有一个字符。那么我们的下标就是 0。
		char sex = sc.next().charAt(0);
		
		System.out.println(sex);
		
		
		
		
		
	}

}
============================================================================
byte类型取值范围-128~~~+127
int类型取值范围-2147483648（-231 ~ +2147483647（231-1）
short类型取值范围-32768 （-215） ~  + 32767 （+215-1）
long类型取值范围-263  ~ + 263-1
float类型取值范围1.4E-45 ~ 3.4E+38 , -1.4E-45 ~ -3.4E+38
double类型取值范围4.9E-324 ~ 1.7E+308, -4.9E-324 ~ -1.7E+308
============================================================================



  
 




